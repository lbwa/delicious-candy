@import "variables";

@font-face {
  font-family: 'custom-icon';
  src:  url('#{$icomoon-font-path}/custom-icon.eot?eoygfy');
  src:  url('#{$icomoon-font-path}/custom-icon.eot?eoygfy#iefix') format('embedded-opentype'),
    url('#{$icomoon-font-path}/custom-icon.ttf?eoygfy') format('truetype'),
    url('#{$icomoon-font-path}/custom-icon.woff?eoygfy') format('woff'),
    url('#{$icomoon-font-path}/custom-icon.svg?eoygfy#custom-icon') format('svg');
  font-weight: normal;
  font-style: normal;
}

[class^="icon-"], [class*=" icon-"] {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'custom-icon' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;

  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@function unicode($str) {
  @return unquote("\"") + $str + unquote("\"");
}

.icon-add_circle {
  &:before {
    content: unicode($icon-add_circle); 
  }
}
.icon-arrow_lift {
  &:before {
    content: unicode($icon-arrow_lift); 
  }
}
.icon-check_circle {
  &:before {
    content: unicode($icon-check_circle); 
  }
}
.icon-close {
  &:before {
    content: unicode($icon-close); 
  }
}
.icon-favorite {
  &:before {
    content: unicode($icon-favorite); 
  }
}
.icon-keyboard_arrow_right {
  &:before {
    content: unicode($icon-keyboard_arrow_right); 
  }
}
.icon-remove_circle_outline {
  &:before {
    content: unicode($icon-remove_circle_outline); 
  }
}
.icon-shopping_cart {
  &:before {
    content: unicode($icon-shopping_cart); 
  }
}
.icon-thumb_down {
  &:before {
    content: unicode($icon-thumb_down); 
  }
}
.icon-thumb_up {
  &:before {
    content: unicode($icon-thumb_up); 
  }
}

